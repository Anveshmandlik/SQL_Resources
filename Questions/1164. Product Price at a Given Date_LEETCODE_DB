Table: Products

+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| product_id    | int     |
| new_price     | int     |
| change_date   | date    |
+---------------+---------+
(product_id, change_date) is the primary key (combination of columns with unique values) of this table.
Each row of this table indicates that the price of some product was changed to a new price at some date. 
Write a solution to find the prices of all products on 2019-08-16. Assume the price of all products before any change is 10.
Return the result table in any order.





SOLUTION:

WITH CTE AS (
    SELECT DISTINCT product_id ,
    FIRST_VALUE(new_price) OVER(PARTITION BY product_id 
    ORDER BY change_date DESC ) AS price 
    FROM Products
    WHERE STR_TO_DATE( change_date, '%Y-%m-%d') <= 
          STR_TO_DATE('2019-08-16', '%Y-%m-%d')
)
SELECT * FROM CTE 
UNION ALL 
SELECT DISTINCT product_id , 10 AS price 
FROM Products
WHERE product_id NOT IN (SELECT product_id FROM CTE );
